decl
integer a[100];
integer partition(integer i,j);
integer quicksort1(integer &i,&j,k);
integer quicksort(integer i,j);

enddecl

integer partition(integer i,j)
{
decl
integer beg;
integer temp;

enddecl
begin
beg=i - 1;

while(i<j) do

	if(a[i] <= a[j]) then
	beg=beg+1;
	temp = a[i];
	a[i] = a[beg];
	a[beg] = temp;
	endif;
i=i+1;

endwhile;

temp = a[beg+1];
a[beg+1] = a[j];
a[j]= temp;
return beg+1;
end
}

integer quicksort1(integer &i,&j,k)
{
	decl
		integer r;
	enddecl
	begin
		r=quicksort(i,j);
		return r;
	end
}

integer quicksort(integer i,j)
{
decl
	integer p,temp,q,r;
enddecl
begin
	if(i<=j) then
		p = partition(i,j);
		q=p-1;
		r=p+1;
		temp = quicksort1(i,q,quicksort1(r,j,r));
		
	endif;
	return p;
end
}



integer main()
{
decl
	integer n,i,temp;
enddecl

begin
	read(n);
	i=0;
	while(i<n) do
	read(a[i]);
	i=i+1;
endwhile;

i = quicksort(0,n-1);

i=0;
while(i<n) do
	write(a[i]);
	i=i+1;
endwhile;
return 1;
end
}




