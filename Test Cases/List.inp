type List{
	integer a;
	List next;
}
endtype

decl
	integer in,opt;
	List Head, newList;
	integer insert(List &H;integer a); 	// OPTION 1
	integer print(List H); 				// OPTION 2
	integer Reverse(List H);			// OPTION 3
	integer copy(List H);
enddecl


integer insert(List &H;integer a){
	decl
		List new;
	enddecl
	begin
		new = alloc();
		new.a = a;
		if(H == NULL) then
			H=new;
			new.next = NULL;
		else
			new.next = H;
			H = new;
		endif;
		return 0;
	end
}

integer print(List H){
	decl
		List t;
		integer a;
	enddecl
	begin
		t=H;
		if(t!=NULL) then
			write(t.a);
			a = print(t.next);
		endif;
		return 0;
	end
}

integer Reverse(List H){
	decl
		List temp1,temp2, temp3;
	enddecl
	begin
		temp1 = NULL;
		temp2 = H;
		while(temp2!=NULL) do
			temp3 = temp2.next;
			temp2.next=temp1;
			temp1 = temp2;
			temp2 = temp3;
		endwhile;
		newList = temp1;
		return 1;
	end
}

integer copy(List H){
	decl
		List temp, temp2;
	enddecl
	begin
		temp = alloc();
		temp.a = H.a;
		temp2 = temp;
		temp2.next = NULL;
		H = H.next;
		while(H != NULL) do
			temp.next = alloc();
			temp.next.a = H.a;
			temp = temp.next;
			temp.next = NULL;
			H = H.next;
		endwhile;
		newList = temp2;
		return 0;
	end
}

integer main(){
	decl
		integer val,flag;
		List t, temp;
	enddecl
	begin
		Head = NULL;
		newList = NULL;
		flag=1;
		while(flag==1) do
			read(opt);
			if (opt==-1) then
				flag = 0;
			endif;
			if(opt==1) then
				read(val);
				while (val!=-1) do
					in=insert(Head,val);
					read(val);
				endwhile;
				write(1111);
			else
				if(opt==2) then
					write(11111);
					in=print(Head);
					write(11111);
				else
					if(opt==3) then
						in = copy(Head);
						write(1111);
						in=Reverse(newList);
						in=print(newList);
						write(111);
					else
						if (opt==4) then
							write(111);
							in=print(newList);
							write(111);
						else
							flag=0;
						endif;
					endif;
				endif;
			endif;
		endwhile;
		return 9;
	end
}
